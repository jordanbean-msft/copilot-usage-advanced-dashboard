# Run when commits are pushed to main
trigger:
  - main

pool:
  vmImage: ubuntu-latest

steps:
  # setup-azd@0 needs to be manually installed in your organization
  # if you can't install it, you can use the below bash script to install azd
  # and remove this step
  - task: setup-azd@1
    displayName: Install azd

  # If you can't install above task in your organization, you can comment it and uncomment below task to install azd
  # - task: Bash@3
  #   displayName: Install azd
  #   inputs:
  #     targetType: 'inline'
  #     script: |
  #       curl -fsSL https://aka.ms/install-azd.sh | bash

  # azd delegate auth to az to use service connection with AzureCLI@2
  - pwsh: |
      azd config set auth.useAzCliAuth "true"
    displayName: Configure AZD to Use AZ CLI Authentication.
  - task: AzureCLI@2
    displayName: Provision Infrastructure
    inputs:
      azureSubscription: DevOpsAzureRMConnection
      scriptType: bash
      scriptLocation: inlineScript
      keepAzSessionActive: true
      inlineScript: |
        azd provision --no-prompt
    env:
      AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
      AZURE_TENANT_ID: $(AZURE_TENANT_ID)
      AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
      AZURE_ENV_NAME: $(AZURE_ENV_NAME)
      AZURE_LOCATION: $(AZURE_LOCATION)
      GITHUB_ORGANIZATION_SLUGS: $(GH_ORGANIZATION_SLUGS)
      AZURE_RESOURCE_GROUP: $(AZURE_RESOURCE_GROUP)
      GITHUB_PAT: $(GH_PAT)

      # Optional: Enable Entra ID SSO
      # Uncomment the following lines if you want to enable Entra ID SSO
      # AZURE_AUTHENTICATION_ENABLED: $(AZURE_AUTHENTICATION_ENABLED)
      # AZURE_AUTHENTICATION_CLIENT_ID: $(AZURE_AUTHENTICATION_CLIENT_ID)
      # AZURE_AUTHENTICATION_OPEN_ID_ISSUER: $(AZURE_AUTHENTICATION_OPEN_ID_ISSUER)

      # Optional: Enable private networking
      # Uncomment the following lines if you want to enable private networking
      # AZURE_VIRTUAL_NETWORK_PROVISION_PRIVATE_ENDPOINTS: $(AZURE_VIRTUAL_NETWORK_PROVISION_PRIVATE_ENDPOINTS)
      # AZURE_VIRTUAL_NETWORK_PUBLIC_NETWORK_ACCESS: $(AZURE_VIRTUAL_NETWORK_PUBLIC_NETWORK_ACCESS)
      # AZURE_VIRTUAL_NETWORK_NAME: $(AZURE_VIRTUAL_NETWORK_NAME)
      # AZURE_VIRTUAL_NETWORK_RESOURCE_GROUP_NAME: $(AZURE_VIRTUAL_NETWORK_RESOURCE_GROUP_NAME)
      # AZURE_VIRTUAL_NETWORK_ADDRESS_PREFIXES: $(AZURE_VIRTUAL_NETWORK_ADDRESS_PREFIXES)
      # AZURE_VIRTUAL_NETWORK_CONTAINER_APPS_SUBNET_NAME: $(AZURE_VIRTUAL_NETWORK_CONTAINER_APPS_SUBNET_NAME)
      # AZURE_VIRTUAL_NETWORK_CONTAINER_APPS_SUBNET_ADDRESS_PREFIX: $(AZURE_VIRTUAL_NETWORK_CONTAINER_APPS_SUBNET_ADDRESS_PREFIX)
      # AZURE_VIRTUAL_NETWORK_CONTAINER_APPS_SUBNET_NSG_NAME: $(AZURE_VIRTUAL_NETWORK_CONTAINER_APPS_SUBNET_NSG_NAME)
      # AZURE_VIRTUAL_NETWORK_PRIVATE_ENDPOINT_SUBNET_NAME: $(AZURE_VIRTUAL_NETWORK_PRIVATE_ENDPOINT_SUBNET_NAME)
      # AZURE_VIRTUAL_NETWORK_PRIVATE_ENDPOINT_SUBNET_ADDRESS_PREFIX: $(AZURE_VIRTUAL_NETWORK_PRIVATE_ENDPOINT_SUBNET_ADDRESS_PREFIX)
      # AZURE_VIRTUAL_NETWORK_PRIVATE_ENDPOINT_SUBNET_NSG_NAME: $(AZURE_VIRTUAL_NETWORK_PRIVATE_ENDPOINT_SUBNET_NSG_NAME)

  - task: AzureCLI@2
    displayName: Deploy Application
    inputs:
      azureSubscription: DevOpsAzureRMConnection
      scriptType: bash
      scriptLocation: inlineScript
      keepAzSessionActive: true
      inlineScript: |
        azd deploy --no-prompt
    env:
      AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
      AZURE_ENV_NAME: $(AZURE_ENV_NAME)
      AZURE_LOCATION: $(AZURE_LOCATION)
